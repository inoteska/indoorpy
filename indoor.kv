#: import smn kivy.uix.screenmanager
#: import math math

<Indoor>:
    clockslayout: clockslayout
    waitscr: waitscr
    digiclock: digiclock
    camera: camera
    settings: settings

    ScreenManager:
        size_hint: 1, 1
        id: _screen_manager
        transition: smn.NoTransition() #FadeTransition()

        Screen:
            name: 'waitscr'
            id: waitscr
            on_enter: lblresult.text = 'Wait a moment...'

            MBoxLayout:
                orientation: 'vertical'

                Label:
                    text: 'Information:'
                    font_size: self.height/5
                    color: 0.6,0.6,0.6,0.9
                Label:
                    text: ''
                    id: lblresult
                    font_size: self.height/3
                    color: 0.9,0.9,0.9,0.9
                Label:
                    text: ''
                    font_size: self.height/5
                    color: 0.6,0.6,0.6,0.9

        Screen:
            name: 'digiclock'
            id: digiclock
            on_touch_down: root.swap2camera()

            MBoxLayout:
                id: clockslayout

        Screen:
            name: 'camera'
            id: camera
            on_pre_enter: root.startScreenTiming()
            on_enter: root.enterCameraScreen()
            on_leave: root.finishScreenTiming()
            on_pre_leave: root.hidePlayers()

            MBoxLayout:
                id: scattercameras
                orientation: 'vertical'

        SetScreen:
            name: 'settings'
            id: settings


# wait for video label:

<VideoLabel>:
    text: 'Wait...'
    font_size: '48dp' #self.height/4
    color: 0.3,0.3,0.9,0.9
    bgcolor: 0,0,0
    canvas.before:
        Color:
            rgb: self.bgcolor
        Rectangle:
            size: self.size
            pos: self.pos


# image button:

<ImageButton>:
    imgpath: None
    btntext: ''
    font_size: '20px'
    lbltext: lbltext

    AsyncImage:
        source: self.parent.imgpath
        center_x: self.parent.center_x
        center_y: self.parent.center_y
        size_hint: 1, None
    Label:
        id: lbltext
        font_size: '32dp'
        color: 0.9,0,0,0.9
        text: self.parent.btntext
        center_x: self.parent.center_x
        center_y: self.parent.center_y
        size_hint: 0, None


# call (2 images) button:

<CallButton>:
    size_hint: 1, None
    height: '47px'
    imgpath: imgpath
    imgpath2: imgpath2

    BoxLayout:
        orientation: 'horizontal'
        size_hint: 1, None
        pos: root.pos
        size: root.size
        size_hint: root.size_hint
        center_y: root.center_y

        AsyncImage:
            id: imgpath
            source: 'imgs/phone-call.png'
            size_hint: 1, 1
            center_y: root.center_y

        AsyncImage:
            id: imgpath2
            source: 'imgs/call-dnd.png'
            size_hint: 1, 1
            center_y: root.center_y

# door (4 images) button:

<DoorButton>:
    size_hint: 1, None
    height: '47px'
    lockimg1: lockimg1
    lockimg2: lockimg2
    lockimg3: lockimg3
    lockimg4: lockimg4

    BoxLayout:
        orientation: 'horizontal'
        size_hint: 1, None
        pos: root.pos
        size: root.size
        size_hint: root.size_hint
        center_y: root.center_y

        AsyncImage:
            id: lockimg1
            source: 'imgs/lock.png'
            size_hint: 1, 1
            center_y: root.center_y

        AsyncImage:
            id: lockimg2
            source: 'imgs/nolock.png'
            size_hint: 1, 1
            center_y: root.center_y

        AsyncImage:
            id: lockimg3
            source: 'imgs/nolock.png'
            size_hint: 1, 1
            center_y: root.center_y

        AsyncImage:
            id: lockimg4
            source: 'imgs/nolock.png'
            size_hint: 1, 1
            center_y: root.center_y


#CLOCK:

<DigiClockWidget>:
    DigiClock:
        font_size: '112dp' #self.height/4
        color: 0.3,0.6,0.9,0.9


<MyClockWidget>:
    face: face
    ticks: ticks
    canvas:
        Color:
            rgba: 1,1,1,1
    FloatLayout:
        id: face
        size_hint: None, None
        pos_hint: {"center_x":0.5, "center_y":0.5}
        size: 0.9*min(root.size), 0.9*min(root.size)
    Ticks:
        id: ticks
        r: min(root.size)*0.9/2


# ListView label:

<MyListViewLabel>:
    font_size: 16
    halign: 'left'
    text_size: self.size


# Settings popup:

<SettingsPopupDlg>:
    closebutton: closebutton
    detailbutton: detailbutton
    size_hint: .85, .85
    orientation: 'vertical'
    valb: 100
    valv: 100
    valm: 100
    vald: False
    setline1: setline1
    setline2: setline2

    BoxLayout:
        orientation: 'horizontal'
        id: setline1

        BoxLayout:
            orientation: 'horizontal'

            AsyncImage:
                source: 'imgs/speaker.png'
                size_hint_x: None
                width: '48px'
            Slider:
                size_hint_x: .9
                min: 20
                max: 100
                step: 10
                value: root.valv
                on_value: root.valv = self.value

        BoxLayout:
            orientation: 'horizontal'

            AsyncImage:
                source: 'imgs/microphone.png'
                size_hint_x: None
                width: '48px'
            Slider:
                size_hint_x: .9
                min: 20
                max: 100
                step: 10
                value: root.valm
                on_value: root.valm = self.value

    BoxLayout:
        orientation: 'horizontal'
        id: setline2

        BoxLayout:
            orientation: 'horizontal'

            AsyncImage:
                source: 'imgs/brightness.png'
                size_hint_x: None
                width: '48px'
            Slider:
                size_hint_x: .9
                min: 15
                max: 255
                step: 15
                value: root.valb
                on_value: root.valb = self.value

        BoxLayout:
            orientation: 'horizontal'

            AsyncImage:
                source: 'imgs/call-dnd.png'
                size_hint_x: None
                width: '48px'
            Switch:
                active: root.vald
                on_active: root.vald = self.active

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '48dp'
        spacing: 8

        Button:
            id: detailbutton
            text: 'Detail'
            on_press: root.openDetailSettings()
        Image:
            source: 'imgs/nothing.png'
            size_hint: None, None
            size: '16px', '32px'
        Button:
            id: closebutton
            text: 'Close'
            on_press: root.closePopupSettings()


# Both side volume vertical sliders:

<SliderArea>:
    orientation: 'vertical'
    spacing: '8px'
    imgpath: 'imgs/settings1.png'
    val: 100
    on_val: None
    audioslider: audioslider
    imgslider: imgslider

    Slider:
        orientation: root.orientation
        id: audioslider
        min: 20
        max: 100
        step: 10
        value: root.val
        on_value: root.on_val()

    AsyncImage:
        id: imgslider
        source: root.imgpath


# BoxLayout + black background:

<MBoxLayout>:
    canvas.before:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
